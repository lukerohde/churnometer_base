<section id="filter" class="form span-24">
	<div class="form">
    <form action="/">
	    <input type="hidden" name="column" value="<%= model['column'] %>"/>
      <ul>
        <li class="datepicker form span-3">
          <label>Start Date</label>
          <input type="text" name="startDate" value="<%= model['startDate'] %>">
        </li>
        <li class="datepicker form span-3">
          <label>End Date</label>
          <input type="text" name="endDate" value="<%= model['endDate'] %>">
        </li>
        <li class="group_by form span-3">
          <label>Group by</label>
		  <%= model.output_group_selector(model['group_by'], 'group_by') %>
    	  </li>
    	  <li class="group_by form span-3">
              <label for="input-internal-select">Running total</label>
              <select id="input-internal-select" name="interval">
                <% model.interval_names.each do |column_name, name| %>
                  <% if column_name == model['interval'] %>
                    <option value="<%= column_name %>" selected="selected"><%= name %></option>
                  <% else %>
                    <option value="<%= column_name %>"><%= name %></option>
                  <% end %>
                <% end %>
              </select>
    	  </li>
		<li class="add_filter span-3 screen_only search">
			<label>Search on</label>
			<%= model.output_group_selector(nil, '', "search_term_add_group") %>
		</li>
		<li class="add_filter span-3 screen_only search">
			<label>Search for</label>
			<%= model.output_filter_group_search_term_editor() %>
		</li>
		<li class="add_filter span-3 screen_only search_button">
			<label>&nbsp;</label>
			<a class="screen_only" onclick="show_search()" onmouseover="this.style.cursor='hand';" onmouseout="this.style.cursor='auto';"><img src="images/search32.png" title="add filter" alt="add filter"/></a>
		</li>
    	 <li >
              <% if model.filters.count > 0 || model['column'].to_s != ''%>
    			<label class="form span-18 screen_only">Drilling down into...</label>
			
    			<table id="filters" class="form span-18" >
    			  <% model.filters.each_with_index do |f, f_idx| %>
    				 <tr class="filter_row <%= f.type == 'disable' ? 'screen_only': '' %>">
    					<td class="form span-5 filters ">
    		    		  <%=h(f.group.to_s + ": " + f.display.to_s) %>
    					</td>
    					<td class="filters">

<%
  # Note that the filter radio button names take the format "f!filter_index[columnname]".
  # This supports having multiple radio groups that affect the same column, i.e. combining data from
  # two branches.
  # Churnometer's custom query parsing strips the exclamation mark and everything after it from the
  # query string when forming the parameter name.
  # If this functionality wasn't available, then the multiple filters of the same type would all share
  # the same radio group, and one or other of the filters couldn't be disabled or removed.
  # This problem could be better solved by changing the way that filter data is encoded in the
  # query string.
%>
						  
    					<input class="selections" type="radio" name="<%="#{Filter}!#{f_idx}[#{f.name}]" %>" value="<%=f.id %>" <%=f.type == 'apply' ? 'checked' : '' %> >Apply filter&nbsp;&nbsp;&nbsp;&nbsp;
    					<input class="selections invert_filter" type="radio" name="<%="#{Filter}!#{f_idx}[#{f.name}]" %>" value="!<%=f.id %>" <%=f.type == 'invert' ? 'checked' : '' %>>Invert filter&nbsp;&nbsp;&nbsp;&nbsp;
    					<span class="screen_only">
                           <input class="selections disable_filter" type="radio" name="<%="#{Filter}!#{f_idx}[#{f.name}]" %>" value="-<%=f.id %>" <%=f.type == 'disable' ? 'checked' : '' %>>Disable filter&nbsp;&nbsp;&nbsp;&nbsp;
    					   <input class="selections remove_filter" type="radio" id="<%="#{Filter}#{f.name}remove" %>" name="<%="#{Filter}!#{f_idx}[#{f.name}]" %>" value="">Remove filter&nbsp;&nbsp;&nbsp;&nbsp;
				  	    </span>
    					</td>
					
    				  </tr>
    			  <% end %>
				  
				  <% if model['site_constraint'].to_s != ''%>
                    <tr>
                        <td class="form span-5 filters">
                            <%="Instead, search by sites assigned to this selection at:"  %>
                        </td>
                        <td class="filters">
                            <input class="selections site_constraint_default" type="radio" name="site_constraint" value="">Any time during the period&nbsp;&nbsp;&nbsp;&nbsp;
							<input id="constrain_start" class="selections site_constraint" type="radio" name="site_constraint" value="start" <%=model['site_constraint'].to_s=='start' ? 'checked' : '' %>><%=Date.parse(model['startDate']).strftime(DateFormatDisplay) %>&nbsp;&nbsp;&nbsp;&nbsp;
                            <input id="constrain_end" class="selections site_constraint" type="radio" name="site_constraint" value="end" <%=model['site_constraint'].to_s=='end' ? 'checked' : '' %>><%=Date.parse(model['endDate']).strftime(DateFormatDisplay) %>&nbsp;&nbsp;&nbsp;&nbsp;
                        </td>
                    </tr>
				<% end %>
    			<% if model['column'].to_s != ''%>
                    <tr>
                        <td class="form span-5 filters">
                            <%=h("Members:  #{model.col_names[model['column']]}") %>
                        </td>
                        <td class="filters">
                            <input class="selections" type="radio" name="<%="column" %>" value="<%=model['column'] %>" checked>Filter for&nbsp;&nbsp;&nbsp;&nbsp;
                            <input class="selections" type="radio" name="<%="column" %>" value="">Remove Filter&nbsp;&nbsp;&nbsp;&nbsp;
                        </td>
                    </tr>
                <% else %>
    			    <tr class="screen_only">
                        <td class="form span-5 filters">
							<!-- TODO refactor the default group branchid -->
                            Constrain search to this <%= model.group_names[model['group_by'] || 'branchid'].downcase %> list
                        </td>
                        <td class="filters">
                            <input class="selections" type="radio" name="<%="lock[#{model['group_by']}]" %>" value="" checked>Off&nbsp;&nbsp;&nbsp;&nbsp;
                            <input class="selections constrain_filter" type="radio" name="<%="lock[#{model['group_by']}]" %>" value="<%=model.row_header_id_list %>">On&nbsp;&nbsp;&nbsp;&nbsp;
                        </td>
                    </tr>
                  <% end %>
    			</table>
			
    		<% else %>
    			<label class="form span-18 screen_only filter_header">Start exploring by clicking interesting links in the charts and tables below.</label>
				
    			<table id="filters" class="form span-18" >
    				<tr class="filter_row">
					</tr>
				</table>
				
    		<% end %>
          </li>

    	  <div class="screen_only span-24" >
          <input  type="submit" value="Refresh">
        </div>
    	</ul>
		<div id="site_constraint_default" class="tooltip">
  			By default, the system searches for sites assigned to the selection any time during the period.  Selecting this removes the option, returning the system to its default behaviour.  
		</div>
		<div id="site_constraint" class="tooltip">
  			This search option finds the sites assigned to the selection at the selected date, then looks at only those sites for the entire period, irrespective who they are allocated to.  It is useful for getting averages and counts for a fixed set of sites without worrying about transfers upsetting things.
  		</div>
  		<div id="removefiltertip" class="tooltip">
  			When removed, this filter will be ignored by the system and removed from the screen.  When removing or disabling a filter, please carefully consider the 'Group By' setting.  If 'Work Site' is set thousands of rows could be returned and your browser could hang.
  		</div>
  		<div id="disablefiltertip" class="tooltip">
  			When disabled, this filter will be ignored by the system but kept visible so it can be easily re-enabled.  When removing or disabling a filter, please carefully consider the 'Group By' setting.  If 'Work Site' is set thousands of rows could be returned and your browser could hang.
  		</div>
  		<div id="invertfiltertip" class="tooltip">
  			Returns everything but this item, by excluding any data that matches this item.  Most useful when used with 'Constrain search...'.
  		</div>
  		<div id="constrainfiltertip" class="tooltip">
  			Limits the results of the next search to those listed below.  Useful when disabling, removing or inverting a filter without changing the set of rows reported.  e.g.  you might want to see all churn for an organiser's sites without being limited to just the period the organiser was assigned to those sites.
  		</div>
		</form>
  </div>
</section>

<script type="text/javascript">
	$(".datepicker input").datepicker({dateFormat: <%=DateFormatPicker%>});
	
	$(".search").hide();
	
	$(".site_constraint").tooltip({
		tip: '#site_constraint',
		position: 'center right',
		offset: [25, 50],
		delay: 0,
		relative: true
	});
	
	$(".site_constraint_default").tooltip({
		tip: '#site_constraint_default',
		position: 'center right',
		offset: [25, 50],
		delay: 0,
		relative: true
	});
	
	$(".remove_filter").tooltip({
		tip: '#removefiltertip',
		position: 'center right',
		offset: [25, 50],
		delay: 0,
		relative: true
	});
	
	$(".disable_filter").tooltip({
		tip: '#disablefiltertip',
		position: 'center right',
		offset: [25, 50],
		delay: 0,
		relative: true
	});
	
	$(".invert_filter").tooltip({
		tip: '#invertfiltertip',
		position: 'center right',
		offset: [25, 50],
		delay: 0,
		relative: true
	});
		
	$(".constrain_filter").tooltip({
		tip: '#constrainfiltertip',
		position: 'center right',
		offset: [0, 50],
		delay: 0,
		relative: true
	});

	function show_search() {
		$(".search").show();
		$(".search_button").hide();
		focus_search_term_add_text();
	}

	function focus_search_term_add_text() {
		$("#search_term_add_text").focus()	
	}

	$("#search_term_add_group").change(function() {
		$("#search_term_add_text").val("")
		focus_search_term_add_text()
	})

	var text_for_search_term_add_id = ''
	
	$(function() {
		$("#search_term_add_text").val("")
	
		//<!--Prevent form submission on enter-->
		//$("input,select").keypress(function(event) { return event.keyCode != 13; });

		//$("form").submit(function(event) {
		//	var problem = false
		
		//	if ($("#search_term_add_id_hidden").val() == "") {
		//		if ($("#search_term_add_text").val() != "") {
		//			alert("The 'Add Filter' text wasn't entered correctly. Please clear the field or select a value from the 'Search for' drop down list.")
		//			problem = true
		//		}
		//	}
		//	else
		//	{
		//		if (text_for_search_term_add_id != $("#search_term_add_text").val()) {
		//			alert("The 'Add Filter' text was changed after a selection was made. Please clear the field or select a value from the autocomplete box.")
		//		}
		//	}

		//	if (problem) {
		//		focus_search_term_add_text()
		//	}

		//	return !problem
		//})

		$("#search_term_add_text").autocomplete({
			minLength: 0,

			source: function(request, response) {
				$.getJSON("services/autocomplete/displaytext", {attribute:$("#search_term_add_group").val(), term:request.term}, response)
			},
	
			select: function(event, ui) {
				//$("#search_term_add_id_hidden").attr("name", "f["+$("#search_term_add_group option:selected").val()+"]");
				//$("#search_term_add_id_hidden").val(ui.item.id);
				//text_for_search_term_add_id = $("#search_term_add_text").val();
				//$("#search_term_add_text").text("");
				
				event.preventDefault()
				
				// Add filter option
				filter_count = $("#search_term_filter_count_hidden").val();
				var block = " \
					<tr> \
						<td class=\"form span-5 filters \"> \
			    		 	" + $("#search_term_add_group option:selected").text() + ": " + ui.item.value + " \
						</td> \
						<td class=\"filters\"> \
						<input class=\"selections\" type=\"radio\" name=\"" + "f!" + filter_count + "["+$("#search_term_add_group option:selected").val()+"]" + "\" value=\"" + ui.item.id + "\" checked >Apply filter&nbsp;&nbsp;&nbsp;&nbsp; \
						<input class=\"selections invert_filter\" type=\"radio\" name=\"" + "f!" + filter_count + "["+$("#search_term_add_group option:selected").val()+"]" + "\" value=\"!" + ui.item.id + "\" >Invert filter&nbsp;&nbsp;&nbsp;&nbsp; \
						<span class=\"screen_only\"> \
	                    	<input class=\"selections disable_filter\" type=\"radio\" name=\"" + "f!" + filter_count + "["+$("#search_term_add_group option:selected").val()+"]" + "\" value=\"-" + ui.item.id + "\" >Disable filter&nbsp;&nbsp;&nbsp;&nbsp; \
							<input class=\"selections remove_filter\" type=\"radio\" name=\"" + "f!" + filter_count + "["+$("#search_term_add_group option:selected").val()+"]" + "\" value=\"\" >Remove filter&nbsp;&nbsp;&nbsp;&nbsp; \
						</span> \
						</td> \
				  	</tr>";
				
				$('#filters tr:first').before(block);
				
				//$("#search_term_add_text").val("")
				$("#search_term_filter_count_hidden").val(filter_count+1);
				focus_search_term_add_text();
			}
		})
	})
</script>



